; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "SQL-MVC"
#define MyAppShortName "SQL-MVC"
#define MyAppLCShortName "sql-mvc"
#define MyAppVersion "0.1"
#define MyAppPublisher "Quale Quest"
#define MyAppURL "http://qualequest.com/"
#define MyAppExeName "winstart-runall.bat"


#define MyAppIcon "GreenBerry.ico" 

#define NSSM "nssm.exe"
#define NSSM32 "nssm-x86.exe"
#define NSSM64 "nssm.exe"
#define NODE32 "node-v0.12.0-x86.msi"
#define NODE64 "node-v0.12.0-x64.msi"
#define NODE "node-v0.12.0-x64.msi"

#define FIREBIRD "Firebird-2.5.3.26780_0_Win32.exe"
#define NPP "npp.6.7.4.Installer.exe"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{97DA02F5-2E8C-4B96-BB42-61ED2BBF34DE}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#MyAppShortName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
;LicenseFile={%USERPROFILE}\Downloads\LICENSE.txt
;InfoBeforeFile={%USERPROFILE}\Downloads\before.txt
;InfoAfterFile={%USERPROFILE}\Downloads\after.txt
OutputDir=\\10.0.0.254\zed\Development\Sites\sql\installers\SQL-MVC-winstaller
OutputBaseFilename={#MyAppShortName}-Installer
SetupIconFile=C:\Users\test1\Downloads\{#MyAppShortName}-master\winstaller\{#MyAppIcon}
              
Compression=lzma
SolidCompression=yes


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Tasks]
Name: runasservice; Description: "Run the server as a service (not recommended for evaluation)"; GroupDescription: "Services:" ;Flags: unchecked


[Files]
Source: "winstart-*.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "*.ico"; DestDir: "{app}"; Flags: ignoreversion
;Source: "winstart-browser.bat"; DestDir: "{app}"; Flags: ignoreversion
;Source: "winstart-compile.bat"; DestDir: "{app}"; Flags: ignoreversion
;Source: "winstart-install.bat"; DestDir: "{app}"; Flags: ignoreversion

Source: "msie-app.hta"; DestDir: "{app}"; Flags: ignoreversion
Source: "msie-app-secure.hta"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#NODE64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#NODE32}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#NSSM64}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#NSSM32}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#NPP}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#FIREBIRD}"; DestDir: "{app}"; Flags: ignoreversion

;Source: "..\{#MyAppShortName}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files


[Icons]
;Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\{#MyAppIcon}"

Name: "{group}\1 - Run all"; Filename: "{app}\{#MyAppExeName}";  IconFilename: "{app}\{#MyAppIcon}"
Name: "{group}\2 - download latest"; Filename: "{app}\winstart-download.bat";  IconFilename: "{app}\Download.ico"

Name: "{group}\extra\3 - develop "; Filename: "{app}\winstart-develop.bat";  IconFilename: "{app}\EditBerry.ico"
Name: "{group}\extra\4 - compile "; Filename: "{app}\winstart-compile.bat";  IconFilename: "{app}\Compile.ico"
Name: "{group}\extra\5 - open browser"; Filename: "{app}\winstart-browser.bat";  IconFilename: "{app}\BrowseBerry.ico"

Name: "{group}\extra\6 - run app server as an application "; Filename: "{app}\winstart-server.bat";  IconFilename: "{app}\RunApp.ico"
Name: "{group}\extra\7 - start app server service"; Filename: "{sys}\net.exe"; Parameters: "start {#MyAppShortName}"; IconFilename: "{app}\RunService.ico" ; Tasks: runasservice
Name: "{group}\extra\8 - stop  app server service"; Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppShortName}"; IconFilename: "{app}\StopService.ico" ; Tasks: runasservice

Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Registry]
Root: "HKLM"; Subkey: "SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers\"; ValueType: String; ValueName: "{group}\{#MyAppName} - 8 - stop  app server service"; ValueData: "RUNASADMIN"; Flags: uninsdeletekeyifempty uninsdeletevalue; MinVersion: 0,6.1; Tasks: runasservice

 
; Here's an example of how you could use a start menu item for just Chrome, no batch file
;Name: "{group}\{#MyAppName}"; Filename: "{pf32}\Google\Chrome\Application\chrome.exe"; Parameters: "--app=http://localhost:5566 --user-data-dir=%APPDATA%\{#MyAppShortName}\"; IconFilename: "{app}\{#MyAppIcon}"


[Run]
; postinstall launch
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall 
;skipifsilent 
;runhidden

; These all run with 'runascurrentuser' (i.e. admin) whereas 'runasoriginaluser' would refer to the logged in user
; Install Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE64}""";  Check: Is64BitInstallMode
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE32}""";  Check: not Is64BitInstallMode
Filename: "{app}\{#FIREBIRD}"; Parameters: "/SILENT"; StatusMsg: "Installing Firebird SQL database server";
Filename: "{app}\{#NPP}"; Parameters: "/S"; StatusMsg: "Installing Notepad ++";
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\{#NODE32}""";  

;Filename: "{app}\winstart-install.bat";  Flags: waituntilterminated; StatusMsg: "Downloading and compiling SQL-MVC";

; Add Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node In"" program=""{pf}\nodejs\node.exe"" dir=in action=allow enable=yes"; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Node Out"" program=""{pf}\nodejs\node.exe"" dir=out action=allow enable=yes"; Flags: runhidden;

; Add System Service
Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppShortName} ""{app}\winstart-server.bat"""; Flags: runhidden;  Check: Is64BitInstallMode; Tasks: runasservice
Filename: "{app}\{#NSSM32}"; Parameters: "install {#MyAppShortName} ""{app}\winstart-server.bat"""; Flags: runhidden; Check: not Is64BitInstallMode; Tasks: runasservice

;Filename: "{app}\{#NSSM}"; Parameters: "install {#MyAppShortName} ""{pf}\nodejs\node.exe"" ""{app}\bin\server.js"" ""5566"""; Flags: runhidden;  Check: Is64BitInstallMode
;Filename: "{app}\{#NSSM32}"; Parameters: "install {#MyAppShortName} ""{pf}\nodejs\node.exe"" ""{app}\bin\server.js"" ""5566"""; Flags: runhidden;  Check: not Is64BitInstallMode
;Filename: "{sys}\net.exe"; Parameters: "start {#MyAppShortName}"; Flags: runhidden;
Filename: "{pf}\nodejs\node.exe"; Parameters: "{app}\bin\windows-service-installer.js install"; Flags: runhidden; Tasks: runasservice
;Filename: "{sys}\net.exe"; Parameters: "start {#MyAppLCShortName}"; Flags: runhidden;


[UninstallRun]
; Removes System Service
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppShortName}"; Flags: runhidden;
Filename: "{app}\{#NSSM}"; Parameters: "remove {#MyAppShortName} confirm"; Flags: runhidden; Check: Is64BitInstallMode
Filename: "{app}\{#NSSM32}"; Parameters: "remove {#MyAppShortName} confirm"; Flags: runhidden; Check: not Is64BitInstallMode
Filename: "{sys}\net.exe"; Parameters: "stop {#MyAppLCShortName}"; Flags: runhidden;
Filename: "{pf}\nodejs\node.exe"; Parameters: "{app}\bin\windows-service-installer.js remove"; Flags: runhidden;

; Remove Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node In"" program=""{pf}\nodejs\node.exe"""; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""Node Out"" program=""{pf}\nodejs\node.exe"""; Flags: runhidden;

; Uninstall Node
Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\{#NODE}""";

; Remove all leftovers
Filename: "{sys}\rmdir"; Parameters: "-r ""{app}""";
